// ------------------------------------------------------------------------------
// <auto-generated>
//     THIS FILE IS AUTO-GENERATED BY ConfigIdCodeGenerator.
//     DO NOT EDIT MANUALLY. Changes will be overwritten.
//     生成时间: 2025-09-03 13:18:29
// ------------------------------------------------------------------------------
#nullable enable
using System;
using System.Collections.Generic;

namespace Game.Data.Generated
{
    /// <summary>
    /// 集中生成的配置 Id 常量访问入口。
    /// 按定义类型（类名）分为内部静态类，每个条目为 public const int {Name} = {Id};
    /// </summary>
    public static partial class ConfigIds
    {
        // === ResourceDefinition ===
        public static class ResourceDefinition
        {
            /// <summary>SrcName: Wood</summary>
            public const int Wood = 1;
            /// <summary>SrcName: CopperOre</summary>
            public const int CopperOre = 2;
            /// <summary>SrcName: WoodPlank</summary>
            public const int WoodPlank = 3;
            /// <summary>SrcName: CopperIngot</summary>
            public const int CopperIngot = 4;
            /// <summary>SrcName: KeyFragment</summary>
            public const int KeyFragment = 5;
            /// <summary>SrcName: DungeonKey</summary>
            public const int DungeonKey = 6;
        }

        /// <summary>总定义常量数量（所有类型累计）。</summary>
        public const int TotalCount = 6;

#if UNITY_EDITOR || DEVELOPMENT_BUILD
        private static Dictionary<Type, Dictionary<int,string>> _idToNameCache;
        /// <summary> (Editor/Dev) 反查：DefinitionType + Id -> 常量名 </summary>
        public static string? TryGetConstName(Type defType, int id)
        {
            if (_idToNameCache == null) BuildReverseCache();
            if (_idToNameCache.TryGetValue(defType, out var inner) && inner.TryGetValue(id, out var name))
                return name;
            return null;
        }

        private static void BuildReverseCache()
        {
            _idToNameCache = new Dictionary<Type, Dictionary<int,string>>();
            // ResourceDefinition
            var dict_ResourceDefinition = new Dictionary<int,string>();
            dict_ResourceDefinition[1] = "Wood";
            dict_ResourceDefinition[2] = "CopperOre";
            dict_ResourceDefinition[3] = "WoodPlank";
            dict_ResourceDefinition[4] = "CopperIngot";
            dict_ResourceDefinition[5] = "KeyFragment";
            dict_ResourceDefinition[6] = "DungeonKey";
            _idToNameCache[typeof(Game.Data.Items.Resource.ResourceDefinition)] = dict_ResourceDefinition;
        }
#endif
    }
}
